name: todo cicd

on:
    push:
        branches:
            - main
        paths:
            - 'todo/**'

jobs:
    build-scan-push_CI:
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: docker login
              run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            - name: docker build
              run: | 
                docker build \
                --build-arg DB_ENGINE="${{ secrets.DB_ENGINE }}" \
                --build-arg DB_USER="${{ secrets.DB_USER }}" \
                --build-arg DB_NAME="${{ secrets.DB_NAME }}" \
                --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
                --build-arg DB_PORT="${{ secrets.DB_PORT }}" \
                --build-arg DB_HOST="${{ secrets.DB_HOST }}" \
                -t ${{ secrets.DOCKER_USERNAME }}/todo-web:${{ github.sha }} \
                todo/.

                echo "✅✅Docker image built ✅✅"

            - name: Scan Docker image using Trivy 
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: '${{ secrets.DOCKER_USERNAME }}/todo-web:${{ github.sha }}'
                format: 'table'
                exit-code: '0'       
                severity: 'CRITICAL,HIGH'
              continue-on-error: true

            - name: docker push 
              run: | 
                docker push ${{ secrets.DOCKER_USERNAME }}/todo-web:${{ github.sha }}
                echo "✅✅Docker image pushed ✅✅"

    deploy:
      runs-on: ubuntu-latest
      steps: 
        - name: checkout code
          uses: actions/checkout

        - name: aws configuration
          uses: aws-action/configure-aws-credintionals@v4 
          with:
            aws-access-key-id: alsjf
            aws-secret-access_key: secrets.
            aws-region: ap-south-1

        - name: Terraform infra creation 
          run: | 
            cd ecs_prod
            terraform init
            terraform plan -auto-approve
            terraform apply -auto-approve 